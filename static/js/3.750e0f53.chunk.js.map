{"version":3,"sources":["components/pro/profileConteiner.jsx"],"names":["ProfileContainer","userID","this","props","match","params","userId","undefined","authUserId","history","push","getUserProfile","getUserStatus","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_pro__WEBPACK_IMPORTED_MODULE_6__","Object","assign","profile","status","setUserUpdateStatus","React","Component","compose","connect","state","profilePage","isAuth","auth","getUserProfileThunk","getUserStatusThunkAC","setUserUpdateStatusThunkAC","withRouter"],"mappings":"6MAiBMA,8LAME,IAAIC,EAASC,KAAKC,MAAMC,MAAMC,OAAOC,YAEvBC,GAAVN,KACAA,EAASC,KAAKC,MAAMK,aAGhBN,KAAKC,MAAMM,QAAQC,KAAK,WAGhCR,KAAKC,MAAMQ,eAAeV,GAC1BC,KAAKC,MAAMS,cAAcX,oCAUzB,OACIY,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GAAahB,KAAKC,MAAlB,CACSgB,QAASjB,KAAKC,MAAMgB,QACpBC,OAAQlB,KAAKC,MAAMiB,OACnBC,oBAAqBnB,KAAKC,MAAMkB,oBAChCT,cAAeV,KAAKC,MAAMS,wBA/BhBU,IAAMC,WAqDtBC,sBACSC,YAjBH,SAACC,GAAD,MAAU,CAE3BP,QAAQO,EAAMC,YAAYR,QAC1BS,OAAOF,EAAMG,KAAKD,OAClBR,OAAOM,EAAMC,YAAYP,OACzBZ,WAAWkB,EAAMG,KAAKvB,SAYsB,CAACK,eAAemB,IACflB,cAAcmB,IACdV,oBAAoBW,MAC7CC,IAJTT,CAMOxB","file":"static/js/3.750e0f53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./pro\";\r\nimport {\r\n    getUserProfileThunk,\r\n    getUserStatusThunkAC, getUserUpdateStatusThunkAC,\r\n    setUserProfile,\r\n    setUserProfileThunk, setUserUpdateStatusThunkAC\r\n} from \"../../redux/profile_reducer\";\r\n\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {withAuthredirect} from \"../../hoc/withAuthComponent\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount(){\r\n\r\n        // Маршруты могут принимать параметры. Параметр имеет следующую форму определения: :название_параметра.\r\n        //     Чтобы получить эти параметры в компоненте, надо обратиться к объекту this.props.match.params:\r\n        let userID = this.props.match.params.userId;\r\n\r\n        if (userID == undefined){\r\n            userID = this.props.authUserId;\r\n            if(!userID){\r\n\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userID);\r\n        this.props.getUserStatus(userID);\r\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userID).then(response => {\r\n        //\r\n        //     this.props.setUserProfile(response.data);\r\n        //\r\n        // });\r\n    }\r\n\r\n    render(){\r\n    // if(this.props.isAuth == false) return <Redirect to={\"/login\"}/>\r\n        return(\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     setUserUpdateStatus={this.props.setUserUpdateStatus}\r\n                     getUserStatus={this.props.getUserStatus}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps =(state)=>({\r\n\r\n    profile:state.profilePage.profile,\r\n    isAuth:state.auth.isAuth,\r\n    status:state.profilePage.status,\r\n    authUserId:state.auth.userId,\r\n\r\n\r\n\r\n});\r\n//оборачиваем нашу контейнерную комп с помощью хока для редиректа\r\n// let AuthRedirectComponent = withAuthredirect(ProfileContainer)\r\n// let WthRouterComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// connect(mapStateToProps,{getUserProfile:getUserProfileThunk})(WthRouterComponent);\r\n\r\nexport default compose (\r\n                        connect(mapStateToProps,{getUserProfile:getUserProfileThunk,\r\n                                                 getUserStatus:getUserStatusThunkAC,\r\n                                                 setUserUpdateStatus:setUserUpdateStatusThunkAC}),\r\n                        withRouter,\r\n                        // withAuthredirect\r\n                    )(ProfileContainer);\r\n//70 lesson"],"sourceRoot":""}